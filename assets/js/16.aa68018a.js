(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{182:function(e,t,r){"use strict";r.r(t);var _=r(0),i=Object(_.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[e._m(0),e._v(" "),r("blockquote",[r("p",[e._v("以下内容来源于"),r("a",{attrs:{href:"https://electronjs.org/docs",target:"_blank",rel:"noopener noreferrer"}},[e._v("Electron官方文档"),r("OutboundLink")],1),e._v("，本人摘录了部分使用过的API和部分概念，以及会对开发中做出对应总结，详细文档请查看官网")])]),e._v(" "),e._m(1),e._v(" "),r("p",[e._v("Electron和浏览器的基本是一致的。分为主进程和渲染进程，在主进程中可以运行脚本创建web页面来展示用户界面。一个应用有且只有一个主进程。渲染进程用来展示每个web页面，运行在单独的安全沙盒环境中，和普通的浏览器区别在于，Electon的用户可以使用Nodejs api让页面和操作系统进行底层交互。")]),e._v(" "),e._m(2),e._v(" "),r("p",[e._v("主进程管理所有的web页面和对应的渲染进程。每个渲染进程是独立的，只关心它所运行的web页面。")]),e._v(" "),e._m(3),e._v(" "),r("blockquote",[r("p",[e._v("进程间通讯：主进程和渲染进程通信有多种实现方式，如可以使用ipcRenderer和ipcMain模块发送消息，使用remote模块进行RPC方式通信。"),r("a",{attrs:{href:"https://electronjs.org/docs/faq#how-to-share-data-between-web-pages",target:"_blank",rel:"noopener noreferrer"}},[e._v("web页面间如何共享数据"),r("OutboundLink")],1)])]),e._v(" "),e._m(4),e._v(" "),r("p",[e._v("通过"),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers",target:"_blank",rel:"noopener noreferrer"}},[e._v("web-workers"),r("OutboundLink")],1),e._v("，可以实现用操作系统级别的线程来跑JavaScript")]),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),e._m(9),e._v(" "),e._m(10),e._v(" "),r("p",[e._v("方法：")]),e._v(" "),e._m(11)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"electron"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#electron","aria-hidden":"true"}},[this._v("#")]),this._v(" Electron")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"应用结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#应用结构","aria-hidden":"true"}},[this._v("#")]),this._v(" 应用结构")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("主进程使用"),t("code",[this._v("BrowserWindow")]),this._v("实例创建页面。每个"),t("code",[this._v("BrowserWindow")]),this._v("都在自己的渲染进程里运行页面。"),t("code",[this._v("BrowserWindow")]),this._v("实例销毁的同时，渲染进程也会终止。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("在页面中调用与 GUI 相关的原生 API 是不被允许的，因为在 web 页面里操作原生的 GUI 资源是非常危险的，而且容易造成资源泄露。")]),this._v(" 如果你想在 web 页面里使用 GUI 操作，其对应的渲染进程必须与主进程进行通讯，请求主进程进行相关的 GUI 操作。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"多线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多线程","aria-hidden":"true"}},[this._v("#")]),this._v(" 多线程")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("可以在Electron的Web Workers里使用Node.js的特性。"),t("strong",[this._v("所有的Electron内置模块不可以用在多线程环境中")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api","aria-hidden":"true"}},[this._v("#")]),this._v(" API")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"app"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#app","aria-hidden":"true"}},[this._v("#")]),this._v(" app")])},function(){var e=this.$createElement,t=this._self._c||e;return t("blockquote",[t("p",[this._v("控制应用程序的事件生命周期")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("app对象")]),this._v("会发出的事件：")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[r("p",[e._v("will-finish-launching - 当应用程序完成基础的启动的时候被触发。Windows和Linux中，与"),r("code",[e._v("ready")]),e._v("事件相同；在macOS中，相当于"),r("code",[e._v("NSApplication")]),e._v("中的"),r("code",[e._v("applicationWillFinishLaunching")]),e._v("提示。")]),e._v(" "),r("p",[e._v("通常会在这里为"),r("code",[e._v("open-file")]),e._v("和"),r("code",[e._v("open-url")]),e._v("设置监听器，并启动崩溃报告和自动更新。")]),e._v(" "),r("p",[e._v("绝大部分，必须在"),r("code",[e._v("ready")]),e._v("事件句柄中处理所有事务。")])]),e._v(" "),r("li",[r("p",[e._v("ready - 当Electron完成初始化时被触发。")])]),e._v(" "),r("li",[r("p",[e._v("window-all-closed - 当所有的窗口都被关闭时触发。")])]),e._v(" "),r("li",[r("p",[e._v("before-quit - 在应用程序开始关闭窗口之前触发。调用evet.preventDefault()会组织默认行为(终结应用程序)。")])]),e._v(" "),r("li",[r("p",[e._v("will-quit - 当所有窗口都已关闭并且应用程序将退出时发出。")])]),e._v(" "),r("li",[r("p",[e._v("quit - 在应用程序退出时发出。")])]),e._v(" "),r("li",[r("p",[e._v("open-file - 当用户想要在应用中打开一个文件时发出。")])]),e._v(" "),r("li",[r("p",[e._v("open-url - 当用户想要在应用中打开一个URL时发出。")])]),e._v(" "),r("li",[r("p",[e._v("activate - 当应用被激活时发出。各种操作都可以触发此事件, 例如首次启动应用程序、尝试在应用程序已运行时或单击应用程序的坞站或任务栏图标时重新激活它。")])])])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[r("p",[e._v("app.quit() - 尝试关闭所有窗口")])]),e._v(" "),r("li",[r("p",[e._v("app.exit() - 立即退出程序并返回exitCode")])]),e._v(" "),r("li",[r("p",[e._v("app.relaunch() - 从当前实例退出，重启应用")]),e._v(" "),r("p",[e._v("请注意, 此方法在执行时不会退出当前的应用程序, 你需要在调用 "),r("code",[e._v("app.relaunch")]),e._v(" 方法后再执行 "),r("code",[e._v("app. quit")]),e._v(" 或者 "),r("code",[e._v("app.exit")]),e._v(" 来让应用重启")])]),e._v(" "),r("li")])}],!1,null,null,null);t.default=i.exports}}]);