(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{182:function(e,t,a){"use strict";a.r(t);var s=a(0),n=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"html5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html5","aria-hidden":"true"}},[e._v("#")]),e._v(" html5")]),e._v(" "),a("h2",{attrs:{id:"web通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web通信","aria-hidden":"true"}},[e._v("#")]),e._v(" web通信")]),e._v(" "),a("p",[e._v("web通信，实际有两个略不同的系统，"),a("strong",[e._v("跨文档通信(cross-document messaging)"),a("strong",[e._v("和")]),e._v("通道通信(channel messaging)")]),e._v("。")]),e._v(" "),a("p",[e._v("无论是跨文档通信（cross-document messaging）、通道通信（channel messaging）、服务器发送事件（server-sent events）或是网络套接字（web sockets）都要执行"),a("strong",[e._v("message事件")])]),e._v(" "),a("h2",{attrs:{id:"message事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#message事件","aria-hidden":"true"}},[e._v("#")]),e._v(" Message事件")]),e._v(" "),a("p",[e._v("包含5个只读属性")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("属性名")]),e._v(" "),a("th",[e._v("含义")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("data")]),e._v(" "),a("td",[e._v("包含任意字符串数据，由原始脚本发送")])]),e._v(" "),a("tr",[a("td",[e._v("origin")]),e._v(" "),a("td",[e._v("一个字符串，包含原始文档的方案、域名以及端口")])]),e._v(" "),a("tr",[a("td",[e._v("lastEventId")]),e._v(" "),a("td",[e._v("一个字符串，包含了当前的消息事件的唯一标识符")])]),e._v(" "),a("tr",[a("td",[e._v("source")]),e._v(" "),a("td",[e._v("原始文件的窗口的引用")])]),e._v(" "),a("tr",[a("td",[e._v("ports")]),e._v(" "),a("td",[e._v("一个数组，包含任何MessagePort对象发送消息")])])])]),e._v(" "),a("p",[e._v("在跨文档通信和通道通信中，lastEventId的值一般为空字符串；lastEventId应用在服务器端发送事件上。")]),e._v(" "),a("p",[e._v("发送消息中如果没有ports，则ports属性值就是个长度为0的数组")]),e._v(" "),a("p",[e._v("MessageEvent继承DOM事件接口，且属性共享。然而，"),a("strong",[e._v("通信事件并没有冒泡，不能取消，也没有默认行为")])]),e._v(" "),a("h2",{attrs:{id:"跨文档通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨文档通信","aria-hidden":"true"}},[e._v("#")]),e._v(" 跨文档通信")]),e._v(" "),a("p",[e._v("IE8+浏览器支持")]),e._v(" "),a("p",[e._v("发送核心JS代码：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("window.parent.frames[1].postMessage(message, '*')\n")])])]),a("p",[e._v("postMessage方法支持两个参数")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("参数")]),e._v(" "),a("th",[e._v("含义")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("message")]),e._v(" "),a("td",[e._v("发送的数据")])]),e._v(" "),a("tr",[a("td",[e._v("targetOrigin")]),e._v(" "),a("td",[e._v("发送数据的来源")])])])]),e._v(" "),a("p",[e._v("postMessage中的message参数不仅仅可以是字符串，结构对象、数据对象（如：File和ArrayBuffer）或是数组")]),e._v(" "),a("p",[e._v("但"),a("strong",[e._v("IE8/IE9/FireFox3.6只支持字符串数据")])]),e._v(" "),a("p",[e._v("targetOrigin *"),a("strong",[a("strong",[e._v("->接收任何目标来源 "),a("strong",[e._v("/")]),e._v(" -> 限制信息只能同源发送。注意在指定来源的时候，后面")]),e._v("不要带斜杆")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("window.postMessage('发送消息', 'http://example.com');\n// 而不是\nwindow.postMessage('发送消息', 'http://example.com/');\n")])])]),a("h2",{attrs:{id:"通道通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通道通信","aria-hidden":"true"}},[e._v("#")]),e._v(" 通道通信")]),e._v(" "),a("p",[e._v("消息通道提供了一个直接，双向浏览上下文之间的通信手段。管道每端为端口，数据从一个端口发送，另一个变成输入")]),e._v(" "),a("p",[e._v("##MessageChannel和MessagePort对象")]),e._v(" "),a("p",[e._v("创建一个MessageChannel对象，实际上创造了两个相互关联的端口。一个端口保持开放，为发送端。另外一个被转发到其他浏览上下文")]),e._v(" "),a("p",[e._v("MessagePort，包含三个可用方法")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("方法名")]),e._v(" "),a("th",[e._v("含义")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("postMessage()")]),e._v(" "),a("td",[e._v("通过通道发送消息")])]),e._v(" "),a("tr",[a("td",[e._v("start()")]),e._v(" "),a("td",[e._v("开始在端口上分派接受的信息")])]),e._v(" "),a("tr",[a("td",[e._v("close()")]),e._v(" "),a("td",[e._v("关闭端口")])])])]),e._v(" "),a("p",[e._v("MessagePort对象还有onmessage事件属性，可被用来定义事件句柄而不是事件监听")]),e._v(" "),a("h3",{attrs:{id:"实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例","aria-hidden":"true"}},[e._v("#")]),e._v(" 实例")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// 本例组成由 主页面+内部嵌套两个iframe页面(iframe1和iframe2)\n// 首先是第一个iframe页面(称为iframe1)，主要完成任务为实现表单提交，通知另外一个iframe页(称为iframe2)，在iframe2中展现。在做表单提交前，需要先通知主页面已经加载好；并且接受来自主页面的传递进来的端口信息\nvar eleForm = document.querySelector(\"form\"), port;\neleForm.onsubmit = function() {\n    var message = documenet.querySelector(\"input[type='test']\").value;\n    if (port === undefined) {\n        alert('信息发送失败，目前没有可用的端口\");\n    } else {\n        port.postMessage(message);\n    }\n    return false;\n}\nwindow.addEventListener('DOMContentLoaded', function (e) {\n\t// postMessage为主页面中发送\n    window.addEventListener('message', function (evt) {\n        if (evt.origin === 'https://coracain.com') {\n            port = evt.ports[0];\n        } else {\n            alert(evt.origin + '来源不认识');\n        }\n    }, false);\n    window.parent.postMessage('iframe1页加载完毕', 'https://coracain.com');\n}, false);\n\n// 右边iframe2页主要接收来自iframe1发送的信息，并展示。\n// 主要完成任务，一是创建MessageChannel通道对象，二是告诉主页面，加载完了，并把端口传过去，三是显示发送过来的信息\nvar eleBox = document.querySelector('#message');\nvar messageHandler = function (e) {\n    eleBox.innerHTML = '接收到的信息是' + e.data;\n}\nwindow.addEventListener('DOMContentLoaded', function () {\n\tif (window.MessageChannel) {\n        // 创建一个新的MessageChannel对象\n        var mc = new MessageChannel();\n        \n        // 给父级发送一个端口\n        window.parent.postMessage('iframe2页加载完毕', 'https://coracain.com', [mc.port1]);\n        \n        // 显示发送的信息\n        mc.port2.addEventListener('message', messageHandler, false);\n        mc.port2.start();\n\t} else {\n        eleBox.innerHTML = '浏览器不支持通道通信';\n\t}\n}, false);\n\n// 主页面主要是做将iframe2中的通道端口传递到iframe1，让两个iframe打通\nwindow.addEventListener('message', function (evt) {\n    if (evt.origin === 'https://coracain.com') {\n        if (evt.ports.length > 0) {\n            // 将端口转移到iframe1文档\n            window.frames[0].postMessage('端口打开', 'https://coracain.com', evt.ports);\n        }\n    }\n}, false);\n")])])])])}],!1,null,null,null);n.options.__file="Damn-hole-of-html5.md";t.default=n.exports}}]);